from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import os

API_TOKEN = os.getenv("API_TOKEN")
ADMIN_CHAT_ID = int(os.getenv("OTZYVY", "0"))

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üìã –ú–µ–Ω—é"))
    kb.add(KeyboardButton("üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"))
    kb.add(KeyboardButton("üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é"))
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ñ–µ–π–Ω–∏ AV COFFEE ‚òï\n–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å?", reply_markup=kb)

# –ú–µ–Ω—é ‚Äî 2 –æ–ø—Ü–∏–∏
@dp.message_handler(lambda message: message.text == "üìã –ú–µ–Ω—é")
async def menu_options(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é"))
    kb.add(KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é"))
    kb.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    await message.answer("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=kb)

# –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é
@dp.message_handler(lambda message: message.text == "üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é")
async def show_menu(message: types.Message):
    await message.answer("‚òï –ù–∞—à–µ –º–µ–Ω—é:\n‚Äî –≠—Å–ø—Ä–µ—Å—Å–æ ‚Äî 150‚ÇΩ\n‚Äî –ö–∞–ø—É—á–∏–Ω–æ ‚Äî 200‚ÇΩ\n‚Äî –ß–∏–∑–∫–µ–π–∫ ‚Äî 270‚ÇΩ")

# –î–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é
@dp.message_handler(lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é")
async def suggest_menu_item(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª(–∞) –≤–∏–¥–µ—Ç—å –≤ –Ω–∞—à–µ–º –º–µ–Ω—é. üëá")

# –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
@dp.message_handler(lambda message: message.text == "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def leave_feedback(message: types.Message):
    await message.answer("–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã —Ç–≤–æ–µ–º—É –æ—Ç–∑—ã–≤—É! –ù–∞–ø–∏—à–∏ –µ–≥–æ –Ω–∏–∂–µ üëá")

# –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é
@dp.message_handler(lambda message: message.text == "üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é")
async def suggest_idea(message: types.Message):
    await message.answer("–£ —Ç–µ–±—è –µ—Å—Ç—å –∏–¥–µ—è? –ü–∏—à–∏ —Å—é–¥–∞ ‚Äî –º—ã —á–∏—Ç–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üëá")

# –ù–∞–∑–∞–¥
@dp.message_handler(lambda message: message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    await send_welcome(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def handle_message(message: types.Message):
    username = f"@{message.from_user.username}" if message.from_user.username else f"{message.from_user.first_name}"
    user_msg = message.text

    await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ. ‚òï")

    if ADMIN_CHAT_ID != 0:
        forward_text = f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}:\n{user_msg}"
        try:
            await bot.send_message(ADMIN_CHAT_ID, forward_text)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
