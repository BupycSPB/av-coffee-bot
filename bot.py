
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import os

API_TOKEN = os.getenv("API_TOKEN")  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –±—Ä–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üìã –ú–µ–Ω—é"), KeyboardButton("üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑"))
    kb.add(KeyboardButton("üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"))
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ñ–µ–π–Ω–∏ AV COFFEE ‚òï\n–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å?", reply_markup=kb)

@dp.message_handler(lambda message: message.text == "üìã –ú–µ–Ω—é")
async def show_menu(message: types.Message):
    await message.answer("‚òï –ù–∞—à–µ –º–µ–Ω—é:\n‚Äî –≠—Å–ø—Ä–µ—Å—Å–æ ‚Äî 150‚ÇΩ\n‚Äî –ö–∞–ø—É—á–∏–Ω–æ ‚Äî 200‚ÇΩ\n‚Äî –ß–∏–∑–∫–µ–π–∫ ‚Äî 270‚ÇΩ")

@dp.message_handler(lambda message: message.text == "üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")
async def make_order(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∑–∞–∫–∞–∑ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ. –ú—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –µ–≥–æ –≤—Ä—É—á–Ω—É—é.")

@dp.message_handler(lambda message: message.text == "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def leave_feedback(message: types.Message):
    await message.answer("–ë—É–¥–µ–º —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π –æ—Ç–∑—ã–≤! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –µ–≥–æ –≤ –æ—Ç–≤–µ—Ç üëá")

@dp.message_handler()
async def echo(message: types.Message):
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ. ‚òï")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
